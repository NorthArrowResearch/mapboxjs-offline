{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"ReactClass": {
		"prefix": "React Class (Semantic)",
		"scope": "javascript,typescript,javascriptreact",
		"body": [
			"import React from 'react'",
			"import PropTypes from 'prop-types'",
			"import { Button } from 'semantic-ui-react'",	
			"",
			"class ${TM_FILENAME/(.*)\\..+$/$1/} extends React.Component {",
			"  state = { }",
			"",
			"  static propTypes = {",
			"    thing: PropTypes.func",
			"  }",
			"",
			"  render () {",
			"    return (",
			"      <Button content='Thing' />",
			"    )",
			"  }",
			"}",
			"",
			"export default ${TM_FILENAME/(.*)\\..+$/$1/}",
			""
		],
		"description": "React class set up for semantic ui"
	},
	"ReactStatic": {
		"prefix": "React functional (Semantic)",
		"scope": "javascript,typescript,javascriptreact",		
		"body": [
			"import React from 'react'",
			"import PropTypes from 'prop-types'",
			"import { Button } from 'semantic-ui-react'",	
			"",
			"const ${TM_FILENAME/(.*)\\..+$/$1/} = (props) => (",
			"  <Button content={`${props.thing}`} />",
			")",
			"",
			"${TM_FILENAME/(.*)\\..+$/$1/}.propTypes = {",
			"  thing: PropTypes.string",
			"}",
			"",
			"export default ${TM_FILENAME/(.*)\\..+$/$1/}",
			""
		],
		"description": "React class set up for semantic ui"
	},
	"Cosmos": {
		"prefix": "cosmos",
		"scope": "javascript,typescript",		
		"body": [
			"import ${1:MyComponent} from './${1:MyComponent}'",
			"",
			"export default [",
			"  {",
			"    name: '${1:MyComponent}',",
			"    component: ${1:MyComponent},",
			"    props: {",
			"      ",
			"    }",
			"  }",
			"]"
		]
	}
}
